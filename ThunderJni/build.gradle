
apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"

        externalNativeBuild {
            cmake {
                // Passes optional arguments to CMake.
                arguments "-DANDROID_TOOLCHAIN=clang",
                        "-DANDROID_ARM_MODE=arm",
                        "-DANDROID_ARM_NEON=TRUE",
                        "-DANDROID_STL=c++_shared",
//                        "-DANDROID_STL=stlport_shared",
//                        "-DANDROID_STL=gnustl_shared",
                        "-DANDROID_CPP_FEATURES=rtti exceptions"
                // Sets optional flags for the C compiler.
                cFlags "-D_EXAMPLE_C_FLAG1", "-D_EXAMPLE_C_FLAG2"

                // Sets a flag to enable format macro constants for the C++ compiler.
                cppFlags "-Wno-missing-declarations -Wno-macro-redefined -Wno-writable-strings -Wno-backslash-newline-escape",
                        "-std=c++11 ",
                        "-O0",
                        "-mfpu=vfpv3-d16 -mfloat-abi=softfp"//, "-ggdb3 -fsanitize=address -fsanitize-recover=address -fno-omit-frame-pointer"
                abiFilters 'armeabi', 'armeabi-v7a'
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            jniDebuggable true
        }
        debug {
            debuggable true
            jniDebuggable true
        }
    }
    sourceSets {
        main {
            // let gradle pack the shared library into apk
            jniLibs.srcDirs = ['libs']
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
}
